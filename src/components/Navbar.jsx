import { Button, Modal } from "flowbite-react";
import { useState } from "react";
import { Link } from "react-router-dom";
import { Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline";

const CustomHeader = () => {
  const [openModal, setOpenModal] = useState(false);
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const navLinks = [
    { name: "Disclaimer", action: () => setOpenModal(true) },
    { name: "Flow", path: "/flow" },
    { name: "Processing", path: "/process" },
    { name: "Statistics", path: "/statistics" },
  ];

  return (
    <div>
      <nav className="bg-transparent py-4">
        <div className="container mx-auto flex items-center justify-between px-4">
          <Link className="text-black font-bold text-lg" to="/">
            <i>AI Waste Classifier</i>
          </Link>

          <button
            className="lg:hidden text-black"
            onClick={() => setIsMenuOpen(!isMenuOpen)}
          >
            {isMenuOpen ? (
              <XMarkIcon className="h-6 w-6" />
            ) : (
              <Bars3Icon className="h-6 w-6" />
            )}
          </button>

          <div className="hidden lg:flex space-x-12 items-center">
            {navLinks.map((link, index) =>
              link.path ? (
                <Link
                  key={index}
                  className="text-black font-bold hover:text-green-500"
                  to={link.path}
                >
                  {link.name}
                </Link>
              ) : (
                <button
                  key={index}
                  className="text-black font-bold hover:text-green-500"
                  onClick={link.action}
                >
                  {link.name}
                </button>
              )
            )}
          </div>
        </div>

        {/* MOBILE NAVIGATION MENU */}
        {isMenuOpen && (
          <div className="lg:hidden absolute top-22 left-0 right-0 bg-white shadow-lg py-4 z-50">
            {navLinks.map((link, index) => (
              <div key={index} className="px-4 py-2">
                {link.path ? (
                  <Link
                    className="text-black font-bold hover:text-green-500 block"
                    to={link.path}
                    onClick={() => setIsMenuOpen(false)}
                  >
                    {link.name}
                  </Link>
                ) : (
                  <button
                    className="text-black font-bold hover:text-green-500 block w-full text-left"
                    onClick={() => {
                      link.action();
                      setIsMenuOpen(false);
                    }}
                  >
                    {link.name}
                  </button>
                )}
              </div>
            ))}
          </div>
        )}
      </nav>

      {/* MODAL COMPONENT */}
      <Modal show={openModal} onClose={() => setOpenModal(false)}>
        <Modal.Header>Disclaimer</Modal.Header>
        <Modal.Body>
          <div className="space-y-6">
            <p className="text-base leading-relaxed text-gray-500 dark:text-gray-400">
              This is an AI-based waste classifier. The results provided by this
              tool are generated by artificial intelligence, which may not
              always be 100% accurate. It is strongly recommended to consult
              with the Irish Environment Department or local authorities for
              proper waste disposal and recycling practices.
            </p>
            <p className="text-base leading-relaxed text-gray-500 dark:text-gray-400">
              While we strive for accuracy, please be aware that AI-based
              systems can make mistakes. Always double-check the results and
              provide feedback to help improve the system.
            </p>
          </div>
        </Modal.Body>
        <Modal.Footer>
          <Button color="green" onClick={() => setOpenModal(false)}>
            I understand
          </Button>
        </Modal.Footer>
      </Modal>
    </div>
  );
};

export default CustomHeader;
